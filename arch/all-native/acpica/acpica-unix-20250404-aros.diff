diff -ruN acpica-unix-20250404/source/include/achware.h acpica-unix-20250404.aros/source/include/achware.h
--- acpica-unix-20250404/source/include/achware.h	2025-04-04 08:25:17.000000000 +0000
+++ acpica-unix-20250404.aros/source/include/achware.h	2023-03-18 11:54:42.470656947 +0000
@@ -161,6 +161,7 @@
 #define ACPI_SST_SLEEPING       3
 #define ACPI_SST_SLEEP_CONTEXT  4
 
+#if !defined(__INLINE_ACPICA_STACKCALL__)
 
 /*
  * hwacpi - high level functions
@@ -335,5 +336,6 @@
     ACPI_HANDLE             RootPciDevice,
     ACPI_HANDLE             PciRegion);
 
+#endif /* !__INLINE_ACPICA_STACKCALL__ */
 
 #endif /* __ACHWARE_H__ */
diff -ruN acpica-unix-20250404/source/include/acpixf.h acpica-unix-20250404.aros/source/include/acpixf.h
--- acpica-unix-20250404/source/include/acpixf.h	2025-04-04 08:25:17.000000000 +0000
+++ acpica-unix-20250404.aros/source/include/acpixf.h	2023-03-18 13:26:30.190657550 +0000
@@ -545,7 +545,8 @@
 
 #endif /* ACPI_DEBUGGER */
 
-
+#if !defined(__INLINE_ACPICA_STACKCALL__)
+ 
 /*****************************************************************************
  *
  * ACPICA public interface prototypes
@@ -1151,6 +1152,7 @@
 AcpiRemoveGpeBlock (
     ACPI_HANDLE             GpeDevice))
 
+#endif /* !__INLINE_ACPICA_STACKCALL__ *
 
 /*
  * Resource interfaces
@@ -1160,6 +1162,8 @@
     ACPI_RESOURCE           *Resource,
     void                    *Context);
 
+#if !defined(__INLINE_ACPICA_STACKCALL__ )
+
 ACPI_EXTERNAL_RETURN_STATUS (
 ACPI_STATUS
 AcpiGetVendorResource (
@@ -1441,4 +1445,6 @@
 AcpiSetDebuggerThreadId (
     ACPI_THREAD_ID          ThreadId);
 
+#endif /* !__INLINE_ACPICA_STACKCALL__ */
+
 #endif /* __ACXFACE_H__ */
diff -ruN acpica-unix-20250404/source/include/acutils.h acpica-unix-20250404.aros/source/include/acutils.h
--- acpica-unix-20250404/source/include/acutils.h	2025-04-04 08:25:17.000000000 +0000
+++ acpica-unix-20250404.aros/source/include/acutils.h	2023-03-18 11:55:30.040657010 +0000
@@ -299,6 +299,7 @@
 #define DB_QWORD_DISPLAY     0x08
 #define DB_DISPLAY_DATA_ONLY 0x10
 
+#if !defined(__INLINE_ACPICA_STACKCALL__)
 
 /*
  * utascii - ASCII utilities
@@ -1302,4 +1303,6 @@
     char                    *OutString);
 #endif
 
+#endif /* !__INLINE_ACPICA_STACKCALL__ */
+
 #endif /* _ACUTILS_H */
diff -ruN acpica-unix-20250404/source/include/platform/acaros.h acpica-unix-20250404.aros/source/include/platform/acaros.h
--- acpica-unix-20250404/source/include/platform/acaros.h	1970-01-01 00:00:00.000000000 +0000
+++ acpica-unix-20250404.aros/source/include/platform/acaros.h	2019-02-21 10:24:26.129890000 +0000
@@ -0,0 +1,86 @@
+/******************************************************************************
+ *
+ * Name: acaros.h - OS specific defines, etc. for AROS
+ *
+ *****************************************************************************/
+
+#ifndef __ACAROS_H__
+#define __ACAROS_H__
+
+#if defined(__i386__) || defined(__x86_64__)
+#define ACPI_DIV_64_BY_32(n_hi, n_lo, d32, q32, r32) \
+    asm volatile ( \
+            "mov %2, %%edx\n" \
+            "mov %3, %%eax\n" \
+            "div %4\n" \
+            "mov %%eax, %0\n" \
+            "mov %%edx, %1\n" \
+            : "=r" (q32), "=r" (r32) \
+            : "r" (n_hi), "r" (n_lo), "r" (d32) \
+            : "%eax", "%edx" );
+
+#define ACPI_SHIFT_RIGHT_64(n_hi, n_lo) \
+    asm volatile ( \
+            "shr $1, %0\n" \
+            "rcr $1, %1\n" \
+            : "=r" (n_hi), "=r" (n_lo) \
+            : "0" (n_hi), "1" (n_lo) \
+            );
+#endif
+
+/* Common (in-kernel/user-space) ACPICA configuration */
+
+#ifndef ACPI_USE_SYSTEM_CLIBRARY
+#define ACPI_USE_SYSTEM_CLIBRARY
+#endif
+#define ACPI_USE_STANDARD_HEADERS
+#define ACPI_MUTEX_TYPE             ACPI_BINARY_SEMAPHORE
+#define ACPI_USE_LOCAL_CACHE
+
+/* Use native AROS version of AcpiOsAllocateZeroed */
+#define USE_NATIVE_ALLOCATE_ZEROED
+
+/*
+ * Calling conventions:
+ *
+ * ACPI_SYSTEM_XFACE        - Interfaces to host OS (handlers, threads)
+ * ACPI_EXTERNAL_XFACE      - External ACPI interfaces
+ * ACPI_INTERNAL_XFACE      - Internal ACPI interfaces
+ * ACPI_INTERNAL_VAR_XFACE  - Internal variable-parameter list interfaces
+ */
+#define ACPI_SYSTEM_XFACE           
+#define ACPI_EXTERNAL_XFACE         
+#define ACPI_INTERNAL_XFACE         
+#define ACPI_INTERNAL_VAR_XFACE     
+
+#include <stdint.h>
+#include <proto/exec.h>
+
+/* Host-dependent types and defines for AROS ACPICA */
+
+#if (__WORDSIZE==64)
+#define ACPI_MACHINE_WIDTH      64
+#else
+#define ACPI_MACHINE_WIDTH      32
+#define ACPI_32BIT_PHYSICAL_ADDRESS
+#endif
+
+#ifndef __cdecl
+#define __cdecl
+#endif
+
+#define ACPI_FLUSH_CPU_CACHE()  CacheClearU()
+#define ACPI_ACQUIRE_GLOBAL_LOCK(facs,acq) \
+     { ACPI_TABLE_FACS *_facs = facs; \
+       BOOLEAN ok = FALSE; \
+       Disable(); if (_facs->GlobalLock == 0) { _facs->GlobalLock=1; ok = TRUE; } Enable(); \
+       acq = ok; }
+#define ACPI_RELEASE_GLOBAL_LOCK(facs,pend) \
+     { ACPI_TABLE_FACS *_facs = facs; \
+       BOOLEAN ok = FALSE; \
+       Disable(); if (_facs->GlobalLock == 1) { _facs->GlobalLock=0; ok = TRUE; } Enable(); \
+       pend = ok; }
+
+#include <libraries/acpica.h>
+
+#endif /* __ACAROS_H__ */
diff -ruN acpica-unix-20250404/source/include/platform/acenv.h acpica-unix-20250404.aros/source/include/platform/acenv.h
--- acpica-unix-20250404/source/include/platform/acenv.h	2025-04-04 08:25:17.000000000 +0000
+++ acpica-unix-20250404.aros/source/include/platform/acenv.h	2019-02-21 10:24:26.133912600 +0000
@@ -350,6 +350,9 @@
 #elif defined(__QNX__)
 #include "acqnx.h"
 
+#elif defined(__AROS__)
+#include "acaros.h"
+
 /*
  * EFI applications can be built with -nostdlib, in this case, it must be
  * included after including all other host environmental definitions, in
