# Makefile to build AHI.

include $(SRCDIR)/config/aros.cfg

#MM- AHI : workbench-devs-AHI
#MM- AHI-quick : workbench-devs-AHI-quick

#MM- workbench-devs-AHI : workbench-devs-AHI-subsystem AHI-drivers
#MM- workbench-devs-AHI-quick : workbench-devs-AHI-subsystem-quick AHI-drivers-quick

#MM- AHI-hosted-stubs : \
#MM                         AHI-alsa-bridge-$(AROS_TARGET_ARCH) \
#MM                         AHI-WASAPI-bridge-$(AROS_TARGET_ARCH)

#MM workbench-devs-AHI-subsystem : includes \
#MM                         linklibs \
#MM                         AHI-hosted-stubs \
#MM                         workbench-libs-muimaster-includes

EXEDIR := $(AROSDIR)

NOWARN_FLAGS := $(NOWARN_POINTER_SIGN)
USER_CPPFLAGS := $(NOWARN_FLAGS)
AHI_OPTIONS=--with-os-includedir=$(AROS_INCLUDES)

# AHI's configure script will not set the needed preprocessor
# flags if cppflags is already defined, so we disable its use in
# build_with_configure, and append the flags to the CFLAGS directly.
USER_CFLAGS := $(CFLAGS_NO_BUILTIN_FLOOR) $(TARGET_CPPFLAGS) -I$(AROS_PRIVATE_INCLUDES)
USER_LDFLAGS := -L$(AROS_PRIVATE_LIB)

#
# AHI uses GAS syntax, which LLVM AS
# doesnt understand, so use clang with the
# configure'd AFLAGS to use the system AS.
#
TARGET_AS:=$(strip $(CC) $(TARGET_SYSROOT))
AHI_ENV=ASFLAGS="$(AFLAGS) $(CPPFLAGS)"

%build_with_configure mmake=workbench-devs-AHI-subsystem prefix=$(EXEDIR) \
    extraoptions="$(AHI_OPTIONS)" config_env_extra="$(AHI_ENV)" usecppflags=no gnuflags=no
