# Common configuration for mesa3d

FFLAGS := --nounistd
BFLAGS := -d

aros_mesadir := workbench/libs/mesa
##top_mesa3dgldir := $(SRCDIR)/$(aros_mesadir)       # original AROS mesa
##top_mesa3dgldir := $(SRCDIR)/local/vc4/mesa
top_mesa3dgldir=$(PORTSDIR)/mesa/$(ARCHBASE)
top_srcdir=$(top_mesa3dgldir)

MESAGLVERSION=20.0.8
#MESAVERSION=$(shell cat $(top_srcdir)/VERSION)
MESAGLREVERSION=
REPOSITORIES := ftp://ftp.freedesktop.org/pub/mesa/older-versions/20.x/
ifeq ($(MESAGLREVERSION),)
    ARCHBASE     := mesa-$(MESAGLVERSION)
else
    ARCHBASE     := mesa-$(MESAGLVERSION)-$(MESAGLREVERSION)
endif
PATCHSPEC   := $(ARCHBASE)-aros.diff:$(ARCHBASE):-p1

ifeq ($(AROS_TARGET_CPU),x86_64)
MESA_USE_ASM=TRUE
endif

top_builddir := $(GENDIR)/$(aros_mesadir)

glapi := $(top_srcdir)/src/mapi/glapi/gen

USER_INCLUDES := \
            -iquote $(top_srcdir)/include \
            -I$(top_srcdir)/include/GL \
            -I$(top_srcdir)/src

MESA_STDC_FLAGS := \
            -D__STDC_CONSTANT_MACROS \
            -D__STDC_FORMAT_MACROS \
            -D__STDC_LIMIT_MACROS

MESA_POSIXC_FLAGS := \
            -D_GNU_SOURCE \
            -DHAVE_PTHREAD

# enabling POSIX_MEMALIGN causes assertion failures...
ifeq (no,)
MESA_POSIXC_FLAGS += \
            -DHAVE_POSIX_MEMALIGN
endif

MESA_BASEFLAGS := \
            $(MESA_STDC_FLAGS) \
            $(MESA_POSIXC_FLAGS) \
            -DHAVE_ZLIB
MESA_ZLIB := -lz_rel

ifneq ($(CFLAGS_NO_BUILTIN_FFS),)
MESA_BASEFLAGS += \
            -DHAVE___BUILTIN_FFS
endif
ifneq ($(CFLAGS_NO_BUILTIN_FFSLL),)
MESA_BASEFLAGS += \
            -DHAVE___BUILTIN_FFSLL
endif
ifneq ($(CFLAGS_NO_BUILTIN_BSWAP32),)
MESA_BASEFLAGS += \
            -DHAVE___BUILTIN_BSWAP32
endif
ifneq ($(CFLAGS_NO_BUILTIN_BSWAP64),)
MESA_BASEFLAGS += \
            -DHAVE___BUILTIN_BSWAP64
endif
ifneq ($(CFLAGS_NO_BUILTIN_CLZ),)
MESA_BASEFLAGS += \
            -DHAVE___BUILTIN_CLZ
endif
ifneq ($(CFLAGS_NO_BUILTIN_CLZLL),)
MESA_BASEFLAGS += \
            -DHAVE___BUILTIN_CLZLL
endif
ifneq ($(CFLAGS_NO_BUILTIN_CTZ),)
MESA_BASEFLAGS += \
            -DHAVE___BUILTIN_CTZ
endif
ifneq ($(CFLAGS_NO_BUILTIN_EXPECT),)
MESA_BASEFLAGS += \
            -DHAVE___BUILTIN_EXPECT
endif
ifneq ($(CFLAGS_NO_BUILTIN_POPCOUNT),)
MESA_BASEFLAGS += \
            -DHAVE___BUILTIN_POPCOUNT
endif
ifneq ($(CFLAGS_NO_BUILTIN_POPCOUNTLL),)
MESA_BASEFLAGS += \
            -DHAVE___BUILTIN_POPCOUNTLL
endif
ifneq ($(CFLAGS_NO_BUILTIN_UNREACHABLE),)
MESA_BASEFLAGS += \
            -DHAVE___BUILTIN_UNREACHABLE
endif

#            -DHAVE_FUNC_ATTRIBUTE_FORMAT
#            -DHAVE_FUNC_ATTRIBUTE_PACKED
#            -DHAVE_FUNC_ATTRIBUTE_RETURNS_NONNULL
#            -DHAVE_FUNC_ATTRIBUTE_ALIAS
#            -DHAVE_FUNC_ATTRIBUTE_NORETURN

#            -DENABLE_SHADER_CACHE

ifeq ($(MESA_USE_ASM),TRUE)
#ifeq ($(AROS_TARGET_ARCH),i386)
#MESA_BASEFLAGS += -DUSE_X86_ASM
#MESA_USE_X86=TRUE
#endif
ifeq ($(AROS_TARGET_CPU),x86_64)
MESA_BASEFLAGS += -DUSE_X86_64_ASM
MESA_USE_X86_64=TRUE
MESA_BASEFLAGS += -DUSE_SSE41
MESA_USE_SSE41=TRUE
OPTIMIZATION_CFLAGS := -O3
TARGET_ISA_CFLAGS += -msse4.1
TARGET_ISA_CXXFLAGS += -msse4.1
endif
endif

MESA_COMPILEFLAGS := \
            $(MESA_BASEFLAGS) \
            -DMAPI_MODE_GLAPI \
            -DMAPI_MODE_UTIL \

MESA_NOWARNFLAGS := \
            $(NOWARN_MISSING_FIELD_INITIALIZERS) \
            $(NOWARN_FORMAT_TRUNCATION)

MESA_DEBUG :=
#MESA_DEBUG := -DDEBUG

USER_CPPFLAGS = $(MESA_COMPILEFLAGS) $(MESA_DEBUG)
USER_CFLAGS =  $(MESA_COMPILEOPTIONS) $(CFLAGS_FAST_MATH) $(CFLAGS_NO_MATH_ERRNO) $(CFLAGS_NO_TRAPPING_MATH) $(CFLAGS_VISIBILITY_HIDDEN) $(CFLAGS_MERGE_CONSTANTS)
USER_CXXFLAGS =  $(MESA_COMPILEOPTIONS) $(CFLAGS_FAST_MATH) $(CFLAGS_NO_MATH_ERRNO) $(CFLAGS_NO_TRAPPING_MATH) $(CFLAGS_VISIBILITY_HIDDEN) $(CFLAGS_MERGE_CONSTANTS)
USER_LDFLAGS := -Wl,-Bsymbolic
