include $(SRCDIR)/config/aros.cfg

#MM- AROS : compiler-stdlib compiler-crt compiler-m
#MM- core-linklibs : linklibs-stdlib linklibs-crt linklibs-crtprog linklibs-m linklibs-crtmod

FMTPRINTFDIR := $(SRCDIR)/compiler/fmtprintf
USER_INCLUDES := -I$(SRCDIR)/compiler/crt/stdc/math -iquote $(FMTPRINTFDIR)

M_MATH := \
    stdc/math/bsdsrc/b_exp \
    stdc/math/bsdsrc/b_log \
    stdc/math/bsdsrc/b_tgamma \
    stdc/math/e_acos \
    stdc/math/e_acosf \
    stdc/math/e_acosh \
    stdc/math/e_acoshf \
    stdc/math/e_asin \
    stdc/math/e_asinf \
    stdc/math/e_atan2 \
    stdc/math/e_atan2f \
    stdc/math/e_atanh \
    stdc/math/e_atanhf \
    stdc/math/e_cosh \
    stdc/math/e_coshf \
    stdc/math/e_exp \
    stdc/math/e_expf \
    stdc/math/e_fmod \
    stdc/math/e_fmodf \
    stdc/math/e_gamma_r \
    stdc/math/e_gammaf_r \
    stdc/math/e_hypot \
    stdc/math/e_hypotf \
    stdc/math/e_j0 \
    stdc/math/e_j0f \
    stdc/math/e_j1 \
    stdc/math/e_j1f \
    stdc/math/e_jn \
    stdc/math/e_jnf \
    stdc/math/e_lgamma_r \
    stdc/math/e_lgammaf_r \
    stdc/math/e_log \
    stdc/math/e_logf \
    stdc/math/e_log2 \
    stdc/math/e_log2f \
    stdc/math/e_log10 \
    stdc/math/e_log10f \
    stdc/math/e_pow \
    stdc/math/e_powf \
    stdc/math/e_rem_pio2 \
    stdc/math/e_rem_pio2f \
    stdc/math/e_remainder \
    stdc/math/e_remainderf \
    stdc/math/e_scalb \
    stdc/math/e_scalbf \
    stdc/math/e_sinh \
    stdc/math/e_sinhf \
    stdc/math/e_sqrt \
    stdc/math/e_sqrtf \
    stdc/math/k_cos \
    stdc/math/k_cosf \
    stdc/math/k_exp \
    stdc/math/k_expf \
    stdc/math/k_rem_pio2 \
    stdc/math/k_rem_pio2f \
    stdc/math/k_sin \
    stdc/math/k_sinf \
    stdc/math/k_tan \
    stdc/math/k_tanf \
    stdc/math/s_nan \
    stdc/math/s_asinh \
    stdc/math/s_asinhf \
    stdc/math/s_atan \
    stdc/math/s_atanf \
    stdc/math/s_cacos \
    stdc/math/s_cacosf \
    stdc/math/s_cacosh \
    stdc/math/s_cacoshf \
    stdc/math/s_carg \
    stdc/math/s_cargf \
    stdc/math/s_casin \
    stdc/math/s_casinf \
    stdc/math/s_casinh \
    stdc/math/s_casinhf \
    stdc/math/s_catan \
    stdc/math/s_catanf \
    stdc/math/s_catanh \
    stdc/math/s_catanhf \
    stdc/math/s_cbrt \
    stdc/math/s_cbrtf \
    stdc/math/s_ccos \
    stdc/math/s_ccosf \
    stdc/math/s_ccosh \
    stdc/math/s_ccoshf \
    stdc/math/s_ceil \
    stdc/math/s_ceilf \
    stdc/math/s_cexp \
    stdc/math/s_cexpf \
    stdc/math/s_cimag \
    stdc/math/s_cimagf \
    stdc/math/s_conj \
    stdc/math/s_conjf \
    stdc/math/s_clog \
    stdc/math/s_clogf \
    stdc/math/s_cpow \
    stdc/math/s_cpowf \
    stdc/math/s_cproj \
    stdc/math/s_cprojf \
    stdc/math/s_creal \
    stdc/math/s_crealf \
    stdc/math/s_csinh \
    stdc/math/s_csinhf \
    stdc/math/s_csin \
    stdc/math/s_csqrt \
    stdc/math/s_csqrtf \
    stdc/math/s_ctan \
    stdc/math/s_ctanf \
    stdc/math/s_ctanh \
    stdc/math/s_ctanhf \
    stdc/math/s_copysign \
    stdc/math/s_copysignf \
    stdc/math/s_cos \
    stdc/math/s_cosf \
    stdc/math/s_erf \
    stdc/math/s_erff \
    stdc/math/s_exp2 \
    stdc/math/s_exp2f \
    stdc/math/s_expm1 \
    stdc/math/s_expm1f \
    stdc/math/s_fabs \
    stdc/math/s_fabsf \
    stdc/math/s_fdim \
    stdc/math/s_floor \
    stdc/math/s_floorf \
    stdc/math/s_fpclassify \
    stdc/math/s_fma \
    stdc/math/s_fmaf  \
    stdc/math/s_fmax \
    stdc/math/s_fmaxf \
    stdc/math/s_fmaxl \
    stdc/math/s_fmin \
    stdc/math/s_fminf \
    stdc/math/s_fminl \
    stdc/math/s_frexp \
    stdc/math/s_frexpf  \
    stdc/math/s_ilogb \
    stdc/math/s_ilogbf \
    stdc/math/s_isfinite \
    stdc/math/s_isinf \
    stdc/math/s_isnan \
    stdc/math/s_isnormal \
    stdc/math/s_log1p \
    stdc/math/s_log1pf \
    stdc/math/s_logb \
    stdc/math/s_logbf \
    stdc/math/s_modf \
    stdc/math/s_modff \
    stdc/math/s_nearbyint \
    stdc/math/s_nextafter \
    stdc/math/s_nextafterf  \
    stdc/math/s_nexttowardf \
    stdc/math/s_remquo \
    stdc/math/s_remquof \
    stdc/math/s_rint \
    stdc/math/s_rintf \
    stdc/math/s_lrint \
    stdc/math/s_lrintf \
    stdc/math/s_llrint \
    stdc/math/s_llrintf \
    stdc/math/s_round \
    stdc/math/s_roundf \
    stdc/math/s_lround \
    stdc/math/s_lroundf \
    stdc/math/s_llround \
    stdc/math/s_llroundf \
    stdc/math/s_scalbln \
    stdc/math/s_scalbn \
    stdc/math/s_scalbnf  \
    stdc/math/s_signbit \
    stdc/math/s_significand \
    stdc/math/s_significandf \
    stdc/math/s_sin \
    stdc/math/s_sincos \
    stdc/math/s_sincosf \
    stdc/math/s_sinf \
    stdc/math/s_tan \
    stdc/math/s_tanf \
    stdc/math/s_tanh \
    stdc/math/s_tanhf \
    stdc/math/s_tgammaf \
    stdc/math/s_trunc \
    stdc/math/s_truncf

M_SCABS_MATH := \
    stdc/math/s_cabs \
    stdc/math/s_cabsf

M_WCABS_MATH := \
    stdc/math/w_cabs \
    stdc/math/w_cabsf

M_LONGDB_MATH := \
    stdc/math/e_acosl \
    stdc/math/e_asinl \
    stdc/math/e_atan2l \
    stdc/math/e_fmodl \
    stdc/math/e_hypotl \
    stdc/math/e_remainderl \
    stdc/math/e_sqrtl \
    stdc/math/polevll \
    stdc/math/s_atanl \
    stdc/math/s_cacoshl \
    stdc/math/s_cacosl \
    stdc/math/s_cargl \
    stdc/math/s_casinhl \
    stdc/math/s_casinl \
    stdc/math/s_catanhl \
    stdc/math/s_catanl \
    stdc/math/s_cbrtl \
    stdc/math/s_ccoshl \
    stdc/math/s_ccosl \
    stdc/math/s_ceill \
    stdc/math/s_cexpl \
    stdc/math/s_cimagl \
    stdc/math/s_clogl \
    stdc/math/s_conjl \
    stdc/math/s_copysignl \
    stdc/math/s_cosl \
    stdc/math/s_cpowl \
    stdc/math/s_cprojl \
    stdc/math/s_creall \
    stdc/math/s_csinhl \
    stdc/math/s_csinl \
    stdc/math/s_csqrtl \
    stdc/math/s_ctanhl \
    stdc/math/s_ctanl \
    stdc/math/s_fabsl \
    stdc/math/s_floorl \
    stdc/math/s_fmal \
    stdc/math/s_frexpl \
    stdc/math/s_ilogbl \
    stdc/math/s_llrintl \
    stdc/math/s_llroundl \
    stdc/math/s_lrintl \
    stdc/math/s_lroundl \
    stdc/math/s_logbl \
    stdc/math/s_modfl \
    stdc/math/s_nextafterl \
    stdc/math/s_nexttoward \
    stdc/math/s_remquol \
    stdc/math/s_rintl \
    stdc/math/s_roundl \
    stdc/math/s_scalbnl \
    stdc/math/s_sincosl \
    stdc/math/s_sinl \
    stdc/math/s_tanl \
    stdc/math/s_truncl

CRT_LGAMMA_MATH := \
    stdc/math/e_gamma \
    stdc/math/e_gammaf \
    stdc/math/e_lgamma \
    stdc/math/e_lgammaf \

CRT_LONGDB_LGAMMA_MATH := \
    stdc/math/e_lgammal \

# Support files for 80bit and 128bit precision long double.

M_LONGDB80_MATH := \
    stdc/math/ld80/e_acoshl \
    stdc/math/ld80/e_atanhl \
    stdc/math/ld80/e_coshl \
    stdc/math/ld80/e_expl \
    stdc/math/ld80/e_lgammal_r \
    stdc/math/ld80/e_log2l \
    stdc/math/ld80/e_log10l \
    stdc/math/ld80/e_logl \
    stdc/math/ld80/e_powl \
    stdc/math/ld80/e_sinhl \
    stdc/math/ld80/e_tgammal \
    stdc/math/ld80/invtrig \
    stdc/math/ld80/k_cosl \
    stdc/math/ld80/k_sinl \
    stdc/math/ld80/k_tanl \
    stdc/math/ld80/s_asinhl \
    stdc/math/ld80/s_erfl \
    stdc/math/ld80/s_exp2l \
    stdc/math/ld80/s_expm1l \
    stdc/math/ld80/s_log1pl \
    stdc/math/ld80/s_nanl \
    stdc/math/ld80/s_tanhl

M_LONGDB128_MATH := \
    stdc/math/ld128/e_acoshl \
    stdc/math/ld128/e_atanhl \
    stdc/math/ld128/e_coshl \
    stdc/math/ld128/e_expl \
    stdc/math/ld128/e_lgammal_r \
    stdc/math/ld128/e_log2l \
    stdc/math/ld128/e_log10l \
    stdc/math/ld128/e_logl \
    stdc/math/ld128/e_powl \
    stdc/math/ld128/e_sinhl \
    stdc/math/ld128/e_tgammal \
    stdc/math/ld128/invtrig \
    stdc/math/ld128/k_cosl \
    stdc/math/ld128/k_sinl \
    stdc/math/ld128/k_tanl \
    stdc/math/ld128/s_asinhl \
    stdc/math/ld128/s_erfl \
    stdc/math/ld128/s_exp2l \
    stdc/math/ld128/s_expm1l \
    stdc/math/ld128/s_log1pl \
    stdc/math/ld128/s_nanl \
    stdc/math/ld128/s_tanhl

#
# Add 80bit long double support on x86, x64 and m68k
#
ifneq ($(filter $(AROS_TARGET_CPU),i386 x86_64 m68k),)
M_MATH += $(M_LONGDB_MATH)
M_MATH += $(M_LONGDB80_MATH)
CRT_LGAMMA_MATH += $(CRT_LONGDB_LGAMMA_MATH)
USER_INCLUDES += -I$(SRCDIR)/compiler/crt/stdc/math/ld80
M_SCABS_MATH += stdc/math/s_cabsl
M_WCABS_MATH += stdc/math/w_cabsl
else
#
# Add 128bit long double support for aarch64
#
ifneq ($(filter $(AROS_TARGET_CPU),aarch64),)
M_MATH += $(M_LONGDB_MATH)
M_MATH += $(M_LONGDB128_MATH)
CRT_LGAMMA_MATH += $(CRT_LONGDB_LGAMMA_MATH)
USER_INCLUDES += -I$(SRCDIR)/compiler/crt/stdc/math/ld128
M_SCABS_MATH += stdc/math/s_cabsl
M_WCABS_MATH += stdc/math/w_cabsl
else
#
# We either don't know what long double format is required
# or the platform doesn't support it, so alias the double versions
# of necessary functions.
# These architectures should have
# LDBL_MANT_DIG == DBL_MANT_DIG (53) in float.h
#
endif
endif

M_MATH += $(M_WCABS_MATH)

# Ugh. These are for the math routines, which have a number of
# lint issues, that should be fixed.
NOWARN_FLAGS := $(NOWARN_NONNULL_COMPARE) $(NOWARN_UNUSED_VARIABLE) \
    $(NOWARN_PARENTHESES) $(NOWARN_UNINITIALIZED)

USER_CFLAGS := $(NOWARN_FLAGS) $(CFLAGS_NO_BUILTIN)
USER_LDFLAGS := -noclibs
USER_CPPFLAGS := \
        -Dlint '-D__FBSDID(x)=' 
#USER_CPPFLAGS += -DDEBUG=1

%build_module mmake=compiler-m \
    modname="m" modtype=library \
    files="$(M_MATH) stdc/_fenv __m_ctype" uselibs="stdc.static"
#stdc.static for memcpy/memset which do not want to compile-in otherwise


###############################################################################

USER_CFLAGS := $(CFLAGS_NO_BUILTIN)
USER_LDFLAGS := -noclibs
USER_CPPFLAGS := \
        -Dlint '-D__FBSDID(x)=' \
#USER_CPPFLAGS += -DDEBUG=1

# wide char/string support
STDLIB_WCHAR := \
    stdc/wcschr \
    stdc/wcscat \
    stdc/wcscmp \
    stdc/wcsncmp \
    stdc/wcscpy \
    stdc/wcsncpy \
    stdc/wcslen

STDLIB := \
    __wchar_t_8 \
    __stdlib_optionallibs \
    stdlib_gmtoffset \
    stdlib_time \
    stdlib_wrapper \
    stdc/__ctype \
    stdc/__vcformat \
    stdc/__vcscan \
    stdc/abs stdc/labs stdc/llabs \
    stdc/asctime_r \
    stdc/atof \
    stdc/bsearch \
    stdc/ctime_r \
    stdc/difftime \
    stdc/div stdc/ldiv stdc/lldiv \
    stdc/gmtime_r \
    stdc/imaxabs \
    stdc/imaxdiv \
    stdc/localeconv \
    stdc/longjmp \
    stdc/mblen \
    stdc/memchr \
    stdc/memcmp \
    stdc/memcpy \
    stdc/memmove \
    stdc/memset \
    stdc/mktime \
    stdc/qsort \
    stdc/setjmp \
    stdc/setlocale \
    stdc/snprintf \
    stdc/sprintf \
    stdc/sscanf \
    stdc/stccpy \
    stdc/stcl_d \
    stdc/stcl_h \
    stdc/stcl_o \
    stdc/stcu_d \
    stdc/stpblk \
    stdc/stpcpy \
    stdc/stpsym \
    stdc/strcasecmp \
    stdc/strcat \
    stdc/strchr \
    stdc/strcmp \
    stdc/strcoll \
    stdc/strcpy \
    stdc/strcspn \
    stdc/strftime \
    stdc/strlcat \
    stdc/strlcpy \
    stdc/strlen \
    stdc/strnlen \
    stdc/strlwr \
    stdc/strncasecmp \
    stdc/strncat \
    stdc/strncmp \
    stdc/strncpy \
    stdc/strpbrk \
    stdc/strrchr \
    stdc/strrev \
    stdc/strsep \
    stdc/strspn \
    stdc/strstr \
    stdc/strtod \
    stdc/strtof \
    stdc/strtold \
    stdc/strtok_r \
    stdc/strupr \
    stdc/strxfrm \
    stdc/vsnprintf \
    stdc/vsprintf \
    stdc/vsscanf

STDLIB_LINKLIB := \
    stdc/strcasestr \
    stdc/__ctype_linklib

%build_module mmake=compiler-stdlib \
    modname=stdlib modtype=library \
    files="$(STDLIB) $(STDLIB_WCHAR)" \
    linklibfiles=$(STDLIB_LINKLIB) uselibs="m"

###############################################################################

NOWARN_FLAGS := $(NOWARN_NONNULL_COMPARE)
USER_CFLAGS += $(NOWARN_FLAGS) $(CFLAGS_MERGE_CONSTANTS)
USER_CPPFLAGS := \
        -D__TIMER_NOLIBBASE__ \
        -D_BSD_SOURCE \
        -D_XOPEN_SOURCE=700 \
        -D_LARGEFILE64_SOURCE \
        -DSTDCNAME='"CRT"'

USER_INCLUDES := \
    -include $(SRCDIR)/$(CURDIR)/__stdc_intbase.h \
    -include $(SRCDIR)/$(CURDIR)/__posixc_intbase.h \
    -iquote $(SRCDIR)/compiler/crt/posixc

USER_LDFLAGS := -noclibs

CRT := \
    __crt_exec \
    __crt_init \
    __crt_modonly \
    __crt_progonly \
    __crt_shareable \
    __crt_vfork \
    crt_assert \
    crt_system \
    crt_wrapper \
    __ino_t_32 \
    __fpos_t_32 \
    posixc/__env \
    posixc/__fdesc \
    posixc/__fopen \
    posixc/__fseeko \
    posixc/__ftello \
    posixc/__get_default_file \
    posixc/__posixc_environ \
    posixc/__posixc_nixmain \
    posixc/__posixc_stdstreams \
    posixc/__posixc_timer \
    posixc/__rand48 \
    posixc/__stat \
    posixc/__stdio \
    posixc/__upath \
    posixc/__usergrp \
    posixc/access \
    posixc/alphasort \
    posixc/alphasort64 \
    posixc/basename \
    posixc/cfgetispeed \
    posixc/cfgetospeed \
    posixc/cfsetispeed \
    posixc/cfsetospeed \
    posixc/chdir \
    posixc/chmod \
    posixc/chown \
    posixc/clearerr \
    posixc/close \
    posixc/closedir \
    posixc/creat \
    posixc/creat64 \
    posixc/dirfd \
    posixc/dirname \
    posixc/drand48 \
    posixc/dup \
    posixc/dup2 \
    posixc/endgrent \
    posixc/endpwent \
    posixc/erand48 \
    posixc/execl \
    posixc/execlp \
    posixc/execv \
    posixc/execve \
    posixc/execvp \
    posixc/fchdir \
    posixc/fchmod \
    posixc/fchown \
    posixc/fclose \
    posixc/fcntl \
    posixc/fdopen \
    posixc/feof \
    posixc/ferror \
    posixc/fflush \
    posixc/fgetc \
    posixc/fgetpos \
    posixc/fgetpos64 \
    posixc/fgets \
    posixc/fileno \
    posixc/flock \
    posixc/flockfile \
    posixc/fopen \
    posixc/fopen64 \
    posixc/fprintf \
    posixc/fputc \
    posixc/fputs \
    posixc/fread \
    posixc/freopen \
    posixc/fscanf \
    posixc/fseek \
    posixc/fseeko \
    posixc/fseeko64 \
    posixc/fsetpos \
    posixc/fsetpos64 \
    posixc/fstat \
    posixc/fstat64 \
    posixc/fsync \
    posixc/ftell \
    posixc/ftello \
    posixc/ftello64 \
    posixc/ftruncate \
    posixc/funlockfile \
    posixc/fwrite \
    posixc/getc_unlocked \
    posixc/getchar \
    posixc/getcwd \
    posixc/getegid \
    posixc/geteuid \
    posixc/getenv \
    posixc/getfsstat \
    posixc/getgid \
    posixc/getgrent \
    posixc/getgrgid \
    posixc/getgrnam \
    posixc/getgroups \
    posixc/getloadavg \
    posixc/getlogin \
    posixc/getpass \
    posixc/getpgid \
    posixc/getpgrp \
    posixc/getpid \
    posixc/getppid \
    posixc/getpwent \
    posixc/getpwnam \
    posixc/getpwuid \
    posixc/getrlimit \
    posixc/gets \
    posixc/getuid \
    posixc/ioctl \
    posixc/isatty \
    posixc/jrand48 \
    posixc/kill \
    posixc/lcong48 \
    posixc/link \
    posixc/lrand48 \
    posixc/lseek \
    posixc/lseek64 \
    posixc/lstat \
    posixc/lstat64 \
    posixc/mkdir \
    posixc/mknod \
    posixc/mkstemp \
    posixc/mktemp \
    posixc/mrand48 \
    posixc/nanosleep \
    posixc/nrand48 \
    posixc/open \
    posixc/opendir \
    posixc/pathconf \
    posixc/pclose \
    posixc/perror \
    posixc/pipe \
    posixc/popen \
    posixc/posix_memalign \
    posixc/printf \
    posixc/putchar \
    posixc/putenv \
    posixc/puts \
    posixc/random \
    posixc/read \
    posixc/readdir \
    posixc/readdir64 \
    posixc/readlink \
    posixc/realpath \
    posixc/regex/regerror \
    posixc/regex/regexec \
    posixc/regex/regcomp \
    posixc/regex/regfree \
    posixc/rewind \
    posixc/rewinddir \
    posixc/scandir \
    posixc/scandir64 \
    posixc/scanf \
    posixc/seed48 \
    posixc/seekdir \
    posixc/setbuf \
    posixc/setegid \
    posixc/setenv \
    posixc/seteuid \
    posixc/setgid \
    posixc/setgrent \
    posixc/setpwent \
    posixc/setrlimit \
    posixc/setsid \
    posixc/setuid \
    posixc/setvbuf \
    posixc/sigaction \
    posixc/sigaddset \
    posixc/sigdelset \
    posixc/sigemptyset \
    posixc/sigfillset \
    posixc/sigismember \
    posixc/siglongjmp \
    posixc/sigpending \
    posixc/sigprocmask \
    posixc/sigsetjmp \
    posixc/sigsuspend \
    posixc/sleep \
    posixc/srand48 \
    posixc/stat \
    posixc/stat64 \
    posixc/statfs \
    posixc/strerror \
    posixc/strptime \
    posixc/swab \
    posixc/symlink \
    posixc/sync \
    posixc/sysconf \
    posixc/tcgetattr \
    posixc/tcgetpgrp \
    posixc/tcsetattr \
    posixc/telldir \
    posixc/tempnam \
    posixc/times \
    posixc/tmpfile \
    posixc/tmpnam \
    posixc/truncate \
    posixc/ttyname \
    posixc/umask \
    posixc/uname \
    posixc/ungetc \
    posixc/unsetenv \
    posixc/updatestdio \
    posixc/usleep \
    posixc/utime \
    posixc/utimes \
    posixc/vfprintf \
    posixc/vfscanf \
    posixc/vprintf \
    posixc/vscanf \
    posixc/wait \
    posixc/waitpid \
    posixc/write \
    stdc/__exitfunc \
    stdc/__optionallibs \
    stdc/__signal \
    stdc/__stdc_ioerr2errno \
    stdc/_exit \
    stdc/abort \
    stdc/asctime \
    stdc/asprintf \
    stdc/atexit \
    stdc/calloc \
    stdc/clock \
    stdc/ctime \
    stdc/exit \
    stdc/free \
    stdc/gmtime \
    stdc/localtime \
    stdc/malloc \
    stdc/malloc_align \
    stdc/on_exit \
    stdc/raise \
    stdc/rand \
    stdc/realloc \
    stdc/realloc_nocopy \
    stdc/signal \
    stdc/strdup \
    stdc/strndup \
    stdc/strtoimax \
    stdc/strtok \
    stdc/strtol \
    stdc/strtoul \
    stdc/strtoull \
    stdc/strtoll \
    stdc/strtoumax \
    stdc/vasprintf

CRT_LINKLIB := \
    posixc/getopt \
    posixc/getopt_long

%build_module mmake=compiler-crt \
    modname=crt modtype=library \
    files="$(CRT) $(CRT_LGAMMA_MATH)" \
    linklibfiles="$(CRT_LINKLIB)" uselibs="stdlib m"

###############################################################################

USER_CFLAGS :=
USER_CPPFLAGS :=
USER_INCLUDES :=

# Note: use absolute path pointing to crt, before posixc to control vpath in %rule_compile_multi
CRT_PROG := \
    $(SRCDIR)/compiler/crt/program/_exit \
    program/abort \
    program/assert \
    program/atexit \
    program/exit \
    program/execl \
    program/execlp \
    program/execv \
    program/execve \
    program/execvp \
    program/startup \
    posixc/posixc_environ

%build_linklib mmake=linklibs-crtprog \
    objdir=$(GENDIR)/$(CURDIR)/prog libname=crtprog files="$(CRT_PROG)"

###############################################################################

USER_CFLAGS :=
USER_CPPFLAGS :=
USER_INCLUDES :=

CRT_MOD := \
    module/abort \
    module/assert \
    module/exit \

%build_linklib mmake=linklibs-crtmod \
    objdir=$(GENDIR)/$(CURDIR)/mod libname=crtmod files="$(CRT_MOD)"

###############################################################################

USER_INCLUDES := -I$(SRCDIR)/compiler/crt/stdc/math -iquote $(FMTPRINTFDIR)

M_MATH_STATIC := \
    stdc/math/e_log \
    stdc/math/e_logf \
    stdc/math/e_log2 \
    stdc/math/e_log2f \
    stdc/math/e_log10 \
    stdc/math/e_log10f \
    stdc/math/e_pow \
    stdc/math/e_powf \
    stdc/math/e_rem_pio2 \
    stdc/math/e_sqrt \
    stdc/math/k_cos \
    stdc/math/k_rem_pio2 \
    stdc/math/k_sin \
    stdc/math/s_copysign \
    stdc/math/s_copysignf \
    stdc/math/s_copysignl \
    stdc/math/s_cos \
    stdc/math/s_fabs \
    stdc/math/s_floor \
    stdc/math/s_fpclassify \
    stdc/math/s_scalbn \
    stdc/math/s_scalbnf

STDC_STATIC := \
    stdc/__ctype \
    stdc/__vcformat \
    stdc/__vcscan \
    stdc/abs stdc/labs stdc/llabs \
    stdc/atoi \
    stdc/atol \
    stdc/atoll \
    stdc/bsearch \
    $(M_MATH_STATIC) \
    stdc/memchr \
    stdc/memcmp \
    stdc/memcpy \
    stdc/memmove \
    stdc/memset \
    stdc/qsort \
    stdc/snprintf \
    stdc/sprintf \
    stdc/sscanf \
    stdc/stccpy \
    stdc/stpblk \
    stdc/strcasecmp \
    stdc/strcasestr \
    stdc/strcat \
    stdc/stcd_l \
    stdc/stch_l \
    stdc/stcl_d \
    stdc/stcl_h \
    stdc/stcl_o \
    stdc/stco_l \
    stdc/stcu_d \
    stdc/stpcpy \
    stdc/strchr \
    stdc/strcmp \
    stdc/strcpy \
    stdc/strcspn \
    stdc/strlcat \
    stdc/strlcpy \
    stdc/strlen \
    stdc/strnlen \
    stdc/strlwr \
    stdc/strncasecmp \
    stdc/strncat \
    stdc/strncpy \
    stdc/strncmp \
    stdc/strpbrk \
    stdc/strrchr \
    stdc/strspn \
    stdc/strstr \
    stdc/strtod \
    stdc/strtof \
    stdc/strtol \
    stdc/strtoul \
    stdc/vsnprintf \
    stdc/vsprintf \
    stdc/vsscanf

USER_CFLAGS := $(NOWARN_FLAGS) $(CFLAGS_NO_BUILTIN) $(CFLAGS_MERGE_CONSTANTS)
USER_CPPFLAGS := \
        -DSTDC_STATIC \
        -Dlint
#USER_CPPFLAGS += -DDEBUG=1

#MM- core-linklibs : linklibs-stdc-static
%build_linklib mmake=linklibs-stdc-static libname=stdc.static \
    files="$(STDC_STATIC)" objdir=$(GENDIR)/$(CURDIR)/static

# FIXME: The next romhack linklib is a temporary hack and has to be
# excommunicated in the future !
# setjmp()/longjmp() is used in dos.library so make it available.
# Plan to put stdc.library also in aros-base rom so this is not needed anymore
#MM- linklibs-romhack : linklibs-romhack-$(AROS_TARGET_CPU)

# pc-x86_64 needs a 32bit version stdc.static
ifeq ($(AROS_TARGET_CPU),x86_64)
    ISA_FLAGS := $(ISA_X86_FLAGS)
endif
USER_CPPFLAGS += -DSTDC_LIB32

%build_linklib mmake=linklibs-stdc-static32 \
    libname=stdc32.static files="$(STDC_STATIC)" objs=$(ROM_COMMON_OBJ32) \
    objdir=$(GENDIR)/$(CURDIR)/32bit libdir=$(GENDIR)/lib32
