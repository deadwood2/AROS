##begin config
version 0.5
basename StdCIO
libbasetypeextern struct StdCIOBase
libbasetype struct StdCIOIntBase
options peropenerbase,rellinklib
##end config

##begin cdef
#include <libraries/stdcio.h>

#define _STDIO_H_NOMACRO
#include <stdio.h>

#include <wchar.h>
#include <wctype.h>
##end cdef

##begin cdefprivate
#include "__stdcio_intbase.h"
##end cdefprivate

##begin startup
#include "stdcio_startup.c"
##end startup

##begin functionlist
# == Internal functions ==
# * unistd.h: Legacy support, amiga/AROS extension
int __stdcio_set_environptr(char ***environptr)
char ***__stdcio_get_environptr(void)
int __stdcio_set_envlistptr(char ***envlisttr)
char ***__stdcio_get_envlistptr(void)
char *__stdcio_env_getvar(const char *varname, int valuesize)
.skip 15
#
# == C99 functions that need dos.library ==
# * assert.h
void __assert(const char * expr, const char * file, unsigned int line)
.alias __stdcio_assert
#
# * stdio.h
int remove(const char *filename)
.alias __stdcio_remove
int rename(const char *old, const char *new)
.alias __stdcio_rename
FILE *tmpfile(void)
.alias __stdcio_tmpfile
char *tmpnam(char *s)
.alias __stdcio_tmpnam
int fclose(FILE *stream)
.alias __stdcio_fclose
int fflush(FILE *stream)
.alias __stdcio_fflush
FILE *fopen(const char * restrict filename, const char * restrict mode)
.alias __stdcio_fopen
FILE *freopen(const char * restrict filename, const char * restrict mode, FILE * restrict stream)
.alias __stdcio_freopen
void setbuf(FILE * restrict stream, char * restrict buf)
.alias __stdcio_setbuf
int setvbuf(FILE * restrict stream, char * restrict buf, int mode, size_t size)
.alias __stdcio_setvbuf
int fprintf(FILE * restrict stream, const char * restrict format, ...)
.alias __stdcio_fprintf
int fscanf(FILE * restrict stream, const char * restrict format, ...)
.alias __stdcio_fscanf
int printf(const char * restrict format, ...)
.alias __stdcio_printf
int scanf(const char * restrict format, ...)
.alias __stdcio_scanf
int vfprintf(FILE * restrict stream, const char * restrict format, va_list arg)
.alias __stdcio_vfprintf
int vfscanf(FILE * restrict stream, const char * restrict format, va_list arg)
.alias __stdcio_vfscanf
int vprintf(const char * restrict format, va_list arg)
.alias __stdcio_vprintf
int vscanf(const char * restrict format, va_list arg)
.alias __stdcio_vscanf
int fgetc(FILE *stream)
.alias __stdcio_fgetc
.alias getc
char *fgets(char * restrict s, int n, FILE * restrict stream)
.alias __stdcio_fgets
int fputc(int c, FILE *stream)
.alias __stdcio_fputc
.alias putc
int fputs(const char * restrict s, FILE * restrict stream)
.alias __stdcio_fputs
int getchar(void)
.alias __stdcio_getchar
char *gets(char *s)
.alias __stdcio_gets
int putchar(int c)
.alias __stdcio_putchar
int puts(const char *s)
.alias __stdcio_puts
int ungetc(int c, FILE *stream)
.alias __stdcio_ungetc
size_t fread(void * restrict ptr, size_t size, size_t nmemb, FILE * restrict stream)
.alias __stdcio_fread
size_t fwrite(const void * restrict ptr, size_t size, size_t nmemb, FILE * restrict stream)
.alias __stdcio_fwrite
int fgetpos(FILE * restrict stream, fpos_t * restrict pos)
.alias __stdcio_fgetpos
int fseek(FILE *stream, long int offset, int whence)
.alias __stdcio_fseek
int fsetpos(FILE *stream, const fpos_t *pos)
.alias __stdcio_fsetpos
long int ftell(FILE *stream)
.alias __stdcio_ftell
void rewind(FILE *stream)
.alias __stdcio_rewind
void clearerr(FILE *stream)
int feof(FILE *stream)
.alias __stdcio_feof
int ferror(FILE *stream)
.alias __stdcio_ferror
.skip 1
void perror(const char *s)
#
# * stdlib.h
char *getenv(const char *name)
.alias __stdcio_getenv
int system(const char *string)
.alias __stdcio_system
#
# * wchar.h
#
.skip 2
#int fwprintf(FILE *, const wchar_t *, ...)
#int fwscanf(FILE *, const wchar_t *, ...)
wint_t fgetwc(FILE *stream)
wchar_t *fgetws(wchar_t *ws, int n, FILE *stream)
wint_t fputwc(wchar_t wc, FILE *stream)
wint_t fputws(const wchar_t *ws, FILE *stream)
int fwide(FILE *stream, int mode)
wint_t getwc(FILE *stream)
wint_t putwc(wchar_t c, FILE *stream)
wint_t ungetwc(wint_t, FILE *)
.skip 1
#int vfwprintf(FILE *, const wchar_t *, va_list)
wint_t getwchar(void)
wint_t putwchar(wchar_t wc)
##end functionlist
